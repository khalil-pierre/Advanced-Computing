This folder contains several python scripts for running, testing, timing and building various FFT algorithms. All the FFT algorithms are contained in the SerialFFT.py and the FFT.pyx files. All the sequential FFT algorithms bar the ittereative FFT is contained in the SerialFFT.py file. The ittereative FFT as well as the parallel shared memory and distributed memory FFT functions are contained in the FFT.pyx file. The FFT_test.py and the FFT_test_MPI.py as the names suggest, are were I tested the FFT funcions against numpy FFT function. This was done by generating random array of different sizes and using the np.allclose funtion. The time_parallel_FFT.py and time_serial_FFT.py is where the different FFT algorithms were timed. 
The stage_timing.pyx script was used to time the different stages of the paralised FFT function to see which loop was the best candidate to be paralysied. The run_stage_timing.py script is where the timings were actually performed. 

The images folder contains various graphs and images that were used in my report Parallel_Fast_Fourier_Transform_Algorithm (1). The results folder contains the results in pickle form for the runs on BlueCrystal. The parallel_fft_timing_{}.pkl contains the timings for different array sizes, with the prefix {} indicating the number of cores which was used to generate the timings. The serial_fft_timing.pkl contains the timings of the various sequential FFT algorithms for various array sizes. The stage_timing_thread_{}.pkl files contain the timing of the different stage of the two different parallyed shared memory FFT algorithms that I was testing. The old_parallel_results folder contains old parallel_fft_timing_{}.pkl which were run for a smaller number of arrays. Finnaly the results_summary.ipynb is a jupyter notebook were I created the graphs that were used in the final report. 